#include <PZEM004Tv30.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#define rp 6
PZEM004Tv30 pzem(2, 3);
LiquidCrystal_I2C lcd(0x27, 16, 4); // Software Serial pin 8 (RX) & 9 (TX)
void setup() {
Serial.begin(9600);
lcd.begin(16,4);
lcd.backlight();
pinMode(rp,OUTPUT);
}
void loop() {
float voltage = pzem.voltage();
if (voltage != NAN) {
Serial.print("Voltage: ");
Serial.print(voltage);
Serial.println("V");
lcd.setCursor(0, 0);
lcd.print("V:");
lcd.print(voltage);
} else {
Serial.println("Error reading voltage");
}
float current = pzem.current();
if (current != NAN) {
Serial.print("Current: ");
Serial.print(current);
Serial.println("A");
lcd.setCursor(0, 1);
lcd.print("I:");
lcd.print(current);
} else {
Serial.println("Error reading current");
}
float power = pzem.power();
if (current != NAN) {
Serial.print("Power: ");
Serial.print(power);
Serial.println("W");
lcd.setCursor(8, 0);
lcd.print("W:");
lcd.print(power);
} else {
Serial.println("Error reading power");
}
float energy = pzem.energy();
if (current != NAN) {
Serial.print("Energy: ");
Serial.print(energy, 3);
Serial.println("kWh");
} else {
Serial.println("Error reading energy");
}
float frequency = pzem.frequency();
if (current != NAN) {
Serial.print("Frequency: ");
Serial.print(frequency, 1);
Serial.println("Hz");
lcd.setCursor(0, 2);
lcd.print("Freq:");
lcd.print(frequency);
} else {
Serial.println("Error reading frequency");
}
float pf = pzem.pf();
if (current != NAN) {
Serial.print("PF: ");
Serial.println(pf);
lcd.setCursor(8, 1);
lcd.print("PF:");
lcd.print(pf);
} else {
Serial.println("Error reading power factor");
}
if(pf>0.1 && pf<0.9)
digitalWrite(rp,LOW);
else
digitalWrite(rp,HIGH);
Serial.println();
delay(2000);
}
